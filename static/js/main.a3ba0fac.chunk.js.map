{"version":3,"sources":["api/users.ts","api/todos.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/UserSelect/UserSelect.tsx","App.tsx","index.tsx"],"names":["id","name","username","email","title","completed","userId","UserInfo","user","className","href","TodoInfo","todo","classNames","TodoList","todos","map","UserSelect","users","value","disabled","App","useState","todosFromServer","currentTodos","setTodos","userSelect","setUserSelect","titleInput","setTitleInput","usersFromServer","find","action","method","onSubmit","ev","preventDefault","todoList","length","target","reset","htmlFor","type","placeholder","onChange","event","replace","defaultValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a3ba0fac.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const {\n    id,\n    name,\n    email,\n  } = user;\n\n  return (\n    <a\n      className=\"UserInfo\"\n      data-id={id}\n      href={`mailto:${email}`}\n    >\n      {name}\n    </a>\n  );\n};\n","import './TodoInfo.scss';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    completed,\n    user,\n  } = todo;\n\n  return (\n    <li\n      data-id={id}\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n      {user && <UserInfo user={user} />}\n    </li>\n  );\n};\n","import './TodoList.scss';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <ul className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          data-id={todo.id}\n          key={todo.id}\n          todo={todo}\n        />\n      ))}\n    </ul>\n  );\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  users: User[]\n};\n\nexport const UserSelect: React.FC<Props> = ({ users }) => {\n  return (\n    <>\n      <option value=\"0\" disabled>\n        Choose a user\n      </option>\n      {users.map(user => (\n        <option key={user.id} value={user.id}>\n          {user.name}\n        </option>\n      ))}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport { TodoList } from './components/TodoList';\nimport { UserSelect } from './components/UserSelect/UserSelect';\n\nfunction getUser(userId: number): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userId);\n\n  return foundUser || null;\n}\n\nexport const App = () => {\n  const [currentTodos, setTodos] = useState(todosFromServer);\n  const [userSelect, setUserSelect] = useState(0);\n  const [titleInput, setTitleInput] = useState('');\n\n  const todos: Todo[] = currentTodos.map(todo => ({\n    ...todo,\n    user: getUser(todo.userId),\n  }));\n\n  function addTodo() {\n    if (titleInput && userSelect > 0) {\n      setTodos((todoList) => [...todoList, {\n        id: todoList.length + 1,\n        title: titleInput,\n        completed: false,\n        userId: userSelect,\n      }]);\n      setUserSelect(0);\n      setTitleInput('');\n    }\n\n    if (userSelect === 0) {\n      setUserSelect(-1);\n    }\n\n    if (titleInput === '') {\n      setTitleInput('-');\n    }\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={(ev) => {\n          ev.preventDefault();\n          addTodo();\n          (ev.target as HTMLFormElement).reset();\n        }}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n\n          <input\n            name=\"titleInput\"\n            id=\"titleInput\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            placeholder=\"Enter a title\"\n            onChange={(event) => {\n              setTitleInput(\n                event.target.value.replace(/[^A-Za-zА-Яа-я0-9\\s]/g, ''),\n              );\n            }}\n          />\n          {titleInput === '-'\n          && <span className=\"error\">Please enter a title</span>}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n          <select\n            name=\"userSelect\"\n            id=\"userSelect\"\n            data-cy=\"userSelect\"\n            defaultValue={`${userSelect}`}\n            onChange={(event) => {\n              setUserSelect(+event.target.value);\n            }}\n          >\n            <UserSelect users={usersFromServer} />\n          </select>\n          {userSelect < 0\n          && <span className=\"error\">Please choose a user</span>}\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}